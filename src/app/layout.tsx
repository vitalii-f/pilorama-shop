import type { Metadata } from 'next';
import { Open_Sans } from 'next/font/google';
import './reset.css';
import './globals.css';
import { AppRouterCacheProvider } from '@mui/material-nextjs/v13-appRouter';
import NavBar from '@/components/navBar/NavBar';
import ThemeClient from '@/components/themeClient/ThemeClient';
import StyledComponentsRegistry from '@/helpers/registry';
import { cookies } from 'next/headers';
import { createClient } from '@/utils/supabase/server';
import { supabase } from '@/helpers/supabase';
import { SpeedInsights } from '@vercel/speed-insights/next';

const openSans = Open_Sans({ subsets: ['latin'] });

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

const fetchProfile = async () => {
  try {
    const { data, error } = await supabase.from('profiles').select('*');
    if (error) throw new Error(error.message);
    return data[0];
  } catch (error) {
    throw new Error(error as string);
  }
};

const fetchUser = async () => {
  const cookieStore = cookies();
  const supabase = createClient(cookieStore);

  const { data } = await supabase.auth.getUser();

  return data.user;
};

export default async function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const user = await fetchUser();
  const profile = await fetchProfile();

  return (
    <html lang='en'>
      <body className={openSans.className}>
        <StyledComponentsRegistry>
          <AppRouterCacheProvider>
            <ThemeClient>
              <NavBar
                user={user}
                avatarURL={profile.avatar}
                role={profile.role}
              />
              {children}
              <SpeedInsights />
            </ThemeClient>
          </AppRouterCacheProvider>
        </StyledComponentsRegistry>
      </body>
    </html>
  );
}
